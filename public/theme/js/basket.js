/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/basket.js":
/*!********************************!*\
  !*** ./resources/js/basket.js ***!
  \********************************/
/***/ (() => {

eval("document.addEventListener('DOMContentLoaded', function () {\n  var CSRFToken = document.querySelector('meta[name=\"csrf-token\"]').content;\n  var headerQuty = document.getElementById('header-quty');\n  var totalPrice = document.getElementById('total-price');\n  var basketInput = document.getElementById('basket-submit-total');\n  var quty = 1;\n  qutyInterface();\n\n  function qutyInterface() {\n    var interfaces = document.getElementsByClassName('quty-interface');\n    Object.values(interfaces).forEach(init);\n\n    function init(interfc) {\n      var valueField = interfc.getElementsByClassName('quty-interface-value')[0];\n      var buttons = interfc.getElementsByClassName('quty-interface-btn');\n      Object.values(buttons).forEach(function (button) {\n        button.addEventListener('click', changeQuty);\n      });\n\n      function changeQuty() {\n        var symbol = this.dataset.quty;\n\n        switch (symbol) {\n          case '+':\n            quty++;\n            break;\n\n          case '-':\n            quty--;\n            break;\n        }\n\n        if (quty <= 0) quty = 1;\n        valueField.innerText = quty + ' шт.';\n      }\n    }\n  }\n  /**\r\n   * Корзина\r\n   */\n\n\n  basketAddCount();\n\n  function basketAddCount() {\n    var addButton = document.getElementsByClassName('add-cart-button')[0];\n    var startQutyField = document.getElementsByClassName('quty-start')[0];\n    if (!addButton || !startQutyField) return;\n    quty = +startQutyField.dataset.value;\n    addButton.addEventListener('click', function () {\n      var productId = this.dataset.id;\n      var formData = new FormData();\n      formData.append('productId', productId);\n      formData.append('count', quty);\n      sendBasket('/basket/addcount', formData, function (err, data) {\n        if (err) {\n          console.log(err);\n          return;\n        }\n\n        console.log(data);\n        addButton.innerText = 'Изменить количество';\n        headerQuty.innerText = data.count;\n      });\n    });\n  }\n\n  basketAdd();\n\n  function basketAdd() {\n    var addButtons = document.getElementsByClassName('add-one-button');\n    Object.values(addButtons).forEach(function (addButton) {\n      addButton.addEventListener('click', function addButtonEvent(evt) {\n        evt.preventDefault();\n        evt.stopPropagation();\n        var productId = this.dataset.id;\n        var formData = new FormData();\n        formData.append('productId', productId);\n        sendBasket('/basket/add', formData, function (err, data) {\n          if (err) {\n            console.log(err);\n            return;\n          }\n\n          console.log(data);\n          addButton.classList.add('--done');\n          addButton.removeEventListener('click', addButtonEvent);\n          headerQuty.innerText = data.count;\n        });\n      });\n    });\n  }\n\n  basketRemove();\n\n  function basketRemove() {\n    var removeButtons = document.getElementsByClassName('remove-button');\n    Object.values(removeButtons).forEach(function (removeButton) {\n      removeButton.addEventListener('click', function () {\n        var productId = this.dataset.id;\n        var formData = new FormData();\n        formData.append('productId', productId);\n        sendBasket('/basket/removeAll', formData, function (err, data) {\n          if (err) {\n            console.log(err);\n            return;\n          }\n\n          console.log(data);\n          headerQuty.innerText = data.count;\n          var row = document.getElementById('basket-row-' + productId);\n          row.style.height = row.offsetHeight + 'px';\n          row.style.overflow = 'hidden';\n          setTimeout(function () {\n            row.classList.add('--hide');\n          });\n          setTimeout(function () {\n            row.remove();\n          }, 300);\n\n          if (totalPrice) {\n            totalPrice.innerText = data.total;\n          }\n\n          if (data.count == 0) location.reload();\n        });\n      });\n    });\n  }\n\n  basketAddInCart();\n\n  function basketAddInCart() {\n    var basketRows = document.getElementsByClassName('basket-row-intenface');\n    Object.values(basketRows).forEach(init);\n\n    function init(row) {\n      var quty = +row.dataset.count;\n      var productId = row.dataset.id;\n      var valueField = row.getElementsByClassName('quty-interface-value')[0];\n      var buttons = row.getElementsByClassName('quty-interface-btn');\n      Object.values(buttons).forEach(function (button) {\n        button.addEventListener('click', changeQuty);\n      });\n\n      function changeQuty() {\n        var symbol = this.dataset.quty;\n\n        switch (symbol) {\n          case '+':\n            quty++;\n            break;\n\n          case '-':\n            quty--;\n            break;\n        }\n\n        if (quty <= 0) quty = 1;\n        valueField.innerText = quty + ' шт.';\n        var formData = new FormData();\n        formData.append('productId', productId);\n        formData.append('count', quty);\n        sendBasket('/basket/addcount', formData, function (err, data) {\n          if (err) {\n            console.log(err);\n            return;\n          }\n\n          console.log(data);\n          headerQuty.innerText = data.count;\n\n          if (totalPrice) {\n            totalPrice.innerText = data.total;\n          }\n\n          if (basketInput) {\n            basketInput.value = data.total;\n            var event = new Event('change', {\n              bubbles: true,\n              cancelable: true\n            });\n            basketInput.dispatchEvent(event);\n          }\n        });\n      }\n    }\n  }\n\n  function sendBasket(url, formData, callback) {\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'X-CSRF-TOKEN': CSRFToken\n      },\n      body: formData\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      callback(null, data);\n    })[\"catch\"](function (err) {\n      callback(err, null);\n    });\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/basket.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/basket.js"]();
/******/ 	
/******/ })()
;