/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/registration.js":
/*!**************************************!*\
  !*** ./resources/js/registration.js ***!
  \**************************************/
/***/ (() => {

eval("function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  var CSRFToken = document.querySelector('meta[name=\"csrf-token\"]').content;\n  logIn();\n\n  function logIn() {\n    var form1 = document.getElementById('login-form');\n    var form2 = document.getElementById('login-code-form');\n    var nextsWrapper = form2.getElementsByClassName('nexts-form__cells')[0];\n    var nexts = nextsWrapper.getElementsByTagName('input');\n    var codeInput = document.getElementById('code-value-input');\n    var errorField = document.getElementById('login-error');\n    var phoneInput = document.getElementById('wndw-login-phone');\n    var sendData = {\n      password: '0123456789'\n    };\n    form1.addEventListener('submit', function (evt) {\n      evt.preventDefault();\n      sendData.phone = phoneInput.value.replace(/[^+\\d]/g, '');\n      $.ajax({\n        url: '/generate-code/login',\n        type: \"POST\",\n        headers: {\n          'X-CSRF-TOKEN': CSRFToken\n        },\n        data: sendData,\n        success: function success(data) {\n          form1.classList.add('--success');\n          nexts[0].focus();\n        },\n        error: function error(msg) {\n          console.log(msg);\n        }\n      });\n    });\n    Object.values(nexts).forEach(function (input, i) {\n      input.addEventListener('input', function (evt) {\n        if (i === nexts.length - 1) {\n          setTimeout(function () {\n            checkInput();\n          }, 100);\n        }\n      });\n    });\n\n    function checkInput() {\n      if (codeInput.value.length === 4) {\n        nextsWrapper.classList.add('--done');\n        setTimeout(function () {\n          sendCode();\n        }, 200);\n      } else {\n        nextsWrapper.classList.add('--error');\n        codeInput.classList.add('--error');\n      }\n    }\n\n    function sendCode() {\n      sendData.code = codeInput.value;\n      $.ajax({\n        url: '/login',\n        type: \"POST\",\n        headers: {\n          'X-CSRF-TOKEN': CSRFToken\n        },\n        data: sendData,\n        dataType: 'JSON',\n        success: function success(data) {\n          console.log(data);\n          location.reload();\n        },\n        error: function error(msg) {\n          var errors = msg['responseJSON']['errors'];\n\n          if ('phone' in errors) {\n            form1.classList.remove('--success');\n            phoneInput.classList.add('--error');\n\n            var _errorField = document.querySelector('#wndw-login-phone + .-error-message');\n\n            _errorField.innerHTML = 'Ваш номер не был найден! Возможно вам нужно <span>зарегистрироваться</span>';\n          }\n\n          if ('code' in errors) {\n            nextsWrapper.classList.add('--error');\n            nextsWrapper.classList.remove('--done');\n            codeInput.classList.add('--error');\n            errorField.innerHTML = '';\n            Object.values(errors).forEach(function (errArr) {\n              errorField.innerHTML += errArr[0] + '<br>';\n            });\n          }\n        }\n      });\n    }\n  }\n\n  signIn();\n\n  function signIn() {\n    var form1 = document.getElementById('signin-form');\n    var form2 = document.getElementById('sendcode-form');\n    var phoneInput = document.getElementById('wndw-signin-phone');\n    var nextsWrapper = form2.getElementsByClassName('nexts-form__cells')[0];\n    var nexts = nextsWrapper.getElementsByTagName('input');\n    var codeInput = document.getElementById('sendcode-input');\n    var errorField = document.getElementById('error-field');\n    var sendData;\n    var targetI = 0;\n    form1.addEventListener('invalid', function (evt) {\n      evt.preventDefault();\n      evt.target.classList.add('--error');\n\n      if (targetI === 0) {\n        evt.target.focus();\n      }\n\n      targetI++;\n    }, true);\n    form1.addEventListener('submit', function (evt) {\n      evt.preventDefault();\n      sendData = new FormData(form1);\n      sendData.set('phone', sendData.get('phone').replace(/[^+\\d]/g, ''));\n      var dataObj = {};\n\n      var _iterator = _createForOfIteratorHelper(sendData.entries()),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var pair = _step.value;\n          dataObj[pair[0]] = pair[1];\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      $.ajax({\n        url: '/generate-code/register',\n        type: \"POST\",\n        headers: {\n          'X-CSRF-TOKEN': CSRFToken\n        },\n        data: dataObj,\n        success: function success(data) {\n          form1.classList.add('--success');\n          nexts[0].focus();\n        },\n        error: function error(msg) {\n          var errors = msg['responseJSON']['errors'];\n          console.log(msg);\n\n          if ('phone' in errors) {\n            phoneInput.classList.add('--error');\n\n            var _errorField2 = document.querySelector('#wndw-signin-phone + .-error-message');\n\n            _errorField2.innerHTML = errors.phone;\n          } else if (msg.status == 429) {\n            alert('Код был запрошен слишком много раз! Пожалуйста, попробуйте позже!');\n          } else {\n            alert('Произошла какая-то ошибка!');\n            location.reload();\n          }\n        }\n      });\n    });\n    Object.values(nexts).forEach(function (input, i) {\n      input.addEventListener('input', function (evt) {\n        if (i === nexts.length - 1) {\n          setTimeout(function () {\n            checkInput();\n          }, 100);\n        }\n      });\n    });\n\n    function checkInput() {\n      if (codeInput.value.length === 4) {\n        nextsWrapper.classList.add('--done');\n        setTimeout(function () {\n          sendCode();\n        }, 200);\n      } else {\n        nextsWrapper.classList.add('--error');\n        codeInput.classList.add('--error');\n      }\n    }\n\n    function sendCode() {\n      sendData.append('code', codeInput.value);\n      var dataObj = {};\n\n      var _iterator2 = _createForOfIteratorHelper(sendData.entries()),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var pair = _step2.value;\n          dataObj[pair[0]] = pair[1];\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      $.ajax({\n        url: '/register',\n        type: 'POST',\n        headers: {\n          'X-CSRF-TOKEN': CSRFToken\n        },\n        data: dataObj,\n        dataType: 'JSON',\n        success: function success(data) {\n          location.reload();\n        },\n        error: function error(msg) {\n          nextsWrapper.classList.add('--error');\n          nextsWrapper.classList.remove('--done');\n          codeInput.classList.add('--error');\n          console.log(msg);\n\n          if ('responseJSON' in msg) {\n            var errors = msg['responseJSON']['errors'];\n            errorField.innerHTML = '';\n            Object.values(errors).forEach(function (errArr) {\n              errorField.innerHTML += errArr[0] + '<br>';\n            });\n          } else {\n            errorField.innerHTML = msg['responseText'];\n          }\n        }\n      });\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/registration.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/registration.js"]();
/******/ 	
/******/ })()
;